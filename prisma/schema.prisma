// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Tag {
  id    Int    @id @default(autoincrement())
  nome  String @unique
  cafes Cafe[] @relation("CafeTags")
}

model Cafe {
  id          Int     @id @default(autoincrement())
  nome        String
  tipo        String
  preco       Float
  descricao   String?
  tags        Tag[]   @relation("CafeTags")
  itensPedido ItemPedido[]
}


model ItemPedido {
  id              Int     @id @default(autoincrement())
  quantidade      Int
  precoUnitario   Float
  pedidoId        Int
  cafeId          Int 
  pedido          Pedido   @relation(fields: [pedidoId], references: [id]) 
  cafe            Cafe     @relation(fields: [cafeId], references: [id])
}

model Cliente {
  id          Int     @id @default(autoincrement())
  nome        String
  email       String  @unique
  CPF         String  @unique
  telefone    String
  pedidos     Pedido[]
}

model Pedido {
  id            Int     @id @default(autoincrement())
  clienteId     Int
  dataPedido    String
  totalPedido   Float
  entrega       Entrega?
  itensPedido   ItemPedido[]
  cliente       Cliente   @relation(fields: [clienteId], references: [id])
}

model Entrega {
  id                Int       @id @default(autoincrement())
  status            Status    @default(pendente)
  enderecoEntrega   String
  dataEntrega       String
  pedidoId          Int       @unique    
  pedido            Pedido    @relation(fields: [pedidoId], references: [id])
}

enum Status {
  pendente
  emTransito
  entregue
}